{smcl}
{* *! version 1.0.1  03aug2022}{...}
{cmd:help cdeco} 
{hline}

{title:Title}

{p2colset 5 25 22 2}{...}
{p2col :{hi: cdeco} {hline 2}}Counterfactual decomposition of differences in distributions{p_end}
{p2colreset}{...}


{title:Syntax}

{p 7 16 2}
{opt cdeco} {depvar} {indepvars} {ifin} {weight}
   	{cmd:,} {opt group(varname)}
	[{it:options}]

{synoptset 25 tabbed}{...}
{synopthdr}
{synoptline}

{syntab:Groups}
{synopt :{opth g:roup(varname)}}specifies the groups; this option is required.{p_end}

{syntab:Quantiles}
{synopt:{opth q:uantiles(numlist)}}sets the quantile(s) at which the decomposition will be estimated.{p_end}

{syntab:Conditional model}
{synopt :{opt m:ethod(string)}}select the model used to estimate the conditional distribution. The following methods have been implemented: 
{opt qr} (the default), {opt loc}, {opt locsca}, {opt cqr}, {opt cox}, {opt logit},
{opt probit}, and {opt lpm}.{p_end}
{synopt:{opt nr:eg(#)}}sets the number of regressions estimated to approximate the conditional distribution; default is 100.{p_end}

{syntab:Further options for the location scale model}
{synopt :{opth sc:ale(varlist)}}select the scale variables for the location-scale model.{p_end}

{syntab:Further options for the censored regression model}
{synopt :{opth c:ensoring(varname)}}gives the censoring value for each observations.{p_end}
{synopt :{opt ri:ght}}indicate that the variable is right-censored.{p_end}
{synopt :{opt ns:teps(#)}}select the number of steps performed; default and minimum is 3.{p_end}
{synopt :{opt f:irstc(#)}}select the percentage of observations thrown out during the second step; default is 0.1.{p_end}
{synopt :{opt s:econdc(#)}}select the percentage of observations thrown out during the third and further steps; default is 0.05.{p_end}

{syntab:Inference}
{synopt :{opt noboot}}suppress the bootstrap.{p_end}
{synopt :{opt reps(#)}}perform # bootstrap replications; default is 100.{p_end}
{synopt :{opt l:evel(#)}}set confidence level; default is {cmd:level(95)}{p_end}
{synopt :{opt f:irst(#)}}set the lowest quantile that is used for functional inference; default is 0.1.{p_end}
{synopt :{opt l:ast(#)}}set the highes quantile that is used for functional inference; default is 0.9.{p_end}
{synopt :{help prefix_saving_option:{bf:{ul:sav}ing(}{it:filename}{bf:, ...)}}}save bootstrap results to {it:filename}; 
save statistics in double precision; save results to {it:filename} every {it:#} replications{p_end}
{synopt:{cmdab: cons:_test(}{it:#}[{it:#}[{it:# ...}]]{cmd:)}}add tests of the null hypothesis that the QEs = {it:#} 
at all estimated quantiles.{p_end}

{syntab:Reporting}
{synopt :{opt noprint}}suppresses all tables of results.{p_end}
{synopt :{opt noprintdeco}}suppresses the tables containing the decompostion.{p_end}
{synopt :{opt noprinttest}}suppresses the tables containing the tests.{p_end}
{synopt :{opt l:evel(#)}}set confidence level; default is {cmd:level(95)}.{p_end}

{synoptline}
{p 4 6 2}
{cmd:pweight}s are allowed; see {help weight}.{p_end}


{title:Description}

{pstd}
{cmd:cdeco} decomposes the differences between the quantile function of {it:depvar}
when {it:group} is equal to 0 and the quantile function of {it:depvar}
when {it:group} is equal to 1. The counterfactual distribution is estimated using 
the conditional distribution of {it:depvar} given {it:indepvars} 
in the sample with {it: group}==0 and the {it:indepvars} distribution in the sample with
{it:group}==1. {cmd:cdeco} also provides
procedures to make pointwise and uniform inference on the quantile functions and on the quantile
effect functions (differences between two quantile functions). Both the estimators
and the inference procedures are described in detail in Chernozhukov, Fernandez-Val and Melly (2013).
A complete description of the statistical properties of the methods implemented by {cmd:cdeco}
can be found in this paper.

{pstd}
The estimation of the conditional distribution can be based on several principal approaches for conditional quantile
and distribution functions, including the linear location shift and location-scale shift models, quantile regression, 
censored quantile regression, linear probability, logit and probit models for the conditional distribution function
and proportional hazard models. The option {opt method(string)} allows to select the estimator of the conditional
distribution. The option {opt nreg(#)} sets the number of regressions used to approximate the conditional
distribution function. When the logit, probit or linear probability models are used, 
{opt nreg(#)} may be set to . which is interpreted by Stata as infinity. In this case, the conditional distribution will be 
estimated at all observed values of the dependent variable.

{pstd}
Pointwise and simultaneous
confidence sets for the QEs are also constructed, which
take into account the sampling variation in the estimation of the
relationship between the outcome and covariates. 
The pointwise standard errors are obtained by the empirical bootstrap. The uniform confidence intervals are obtained
by inverting the Kolmogorov-Smirnov test statistic, whereas the bootstrap is used to estimate the distribution of
the test statistic. These are functional confidence intervals in the sense
that null-hypothesis that are outside of the uniform confidence interval at at least one of the estimated
quantiles are rejected at the pre-specified level.
The options {opt first(#)} and {opt last(#)} can be used to exclude the tails of the distribution from the 
functional inference procedure.

{pstd}
In addition to the uniform confidence bands reported in the main table, the p-values for some null-hypothesis
and two test-statistics are reported in a second table. Both the Kolmogorov-Smirnov and the Cramer-von-Misses-Smirnov
statistic are reported. The first null-hypotheses are the correct parametric specification of the conditional model.
Note that only the implications of the conditional estimation on the unconditional distribution is used. This implies
that this test may have a low power. It has no power at all for the linear probability and the logit models. 
The second set of null hypotheses is that there are no difference at all. This is
stronger than the absence of any mean effect. Other null hypotheses of constant QE (but at a different level than 0)
can be added with the option {opt cons_test(#)}. The null hypthesis that all QEs are equal to the median policy 
effect is also tested. Finally, both null-hypotheses of first-order stochastic dominance are tested.

{pstd} The results can easily be plotted with the command {help plotdeco}.
See the {helpb plotdeco##examples:examples}.


{title:Options}

{dlgtab:Groups}

{phang}
{opth g:roup(varname)} is a binary variable that selects the two groups. 
The counterfactual distribution is estimated using the covariates with {it: group}=1 and the conditional model
in the {it: group}=0 sample.

{dlgtab:Quantiles}

{phang}
{opt quantiles(numlist)} specifies the quantiles at which the effects are 
estimated and should contain numbers between 0 and 1. 
Note that the computational time needed to estimate an additional quantile is very short compared to the 
time needed to estimate the preliminary conditional model. By default, the 9 deciles are estimated

{dlgtab:Conditional model}

{phang}
{opt m:ethod(string)}}select the model used to estimate the conditional distribution. The following methods have been implemented: 

{phang2}
{opt m:ethod(qr)}, which is also the default, select the linear quantile regression estimator of Koenker and Bassett (1978).
{opt nreg} quantile regressions are estimated. The estimated conditional quantile function is monotonized using the 
re-arrangement method suggested by Chernozhukov, Fernandez-Val and Galichon (2007). This allows to invert the quantile
function to obtain the conditional distribution function. This method should be used only with continuous dependent 
variables.

{phang2}
{opt m:ethod(loc)} select the linear location shift model. The conditional mean is estimated using OLS.
The residuals are assumed to be independent from the regressors such that the conditional distribution can be estimated
by the location shift plus the unconditional distribution of the residuals.

{phang2}
{opt m:ethod(locsca)} select the linear location-scale model. The logarithm of the variance of the residuals is
assumed to be a linear function of the variables given in {opth scale(varlist)}.
The conditional mean is estimated using OLS. The conditional variance is estimated by a second linear regression, 
that of the logged squared estimated residuals on {it: scale}. Finally, the distribution of the re-scaled residuals is 
estimated by the unconditional distribution of the re-scaled estimated residuals.
If the option {opt scale} is not specified, {cmd: cdeco} assumes that {it: scale} and {it:indepvars} 
are identical.

{phang2}
{opt m:ethod(cqr)} select the linear censored quantile regression estimator proposed by Chernozhukov and Hong (2002).
The censoring variable must be given in {opth c:ensoring(varname)}. By default, this estimator is a three-steps 
estimator. The number of steps can be increased by the option {opt ns:teps(#)}. In the first step, the censoring
probabilities are estimated by a parametric logit regression of {it: censoring} on {it: indepvars}. Then, for each
quantile regression, the observations with sufficiently low censoring probabilities relative to the quantile
of interest are selected. We allow for misspecification of the logit by excluding the observations that could 
theoretically be used but have censoring probabilities in the highest {it: firstc} quantiles. In the second step,
standard linear quantile regressions are estimated on the samples defined in step one. Using the estimated quantile
regression, we define a new sample of observations that can be used. This sample consists of all observations
for which the estimated conditional quantile is above the censoring point. Again, we throw away observations in 
the lowest {it: secondc} quantiles of the distribution of the residuals. Step three consists in a new linear quantile
regression using the sample defined in step two. Step three is repeated if {opt ns:teps(#)} is above 3.
The conditional distribution function is obtained using the same procedure as for quantile regression.

{phang2}
{opt m:ethod(cox)} select the Cox proportional hazard model. The built-in Stata command stcox is called.
The conditional distribution is calculated using the estimated Cox coefficients and the estimated
baseline survivor function.

{phang2}
{opt m:ethod(logit)} select the logit estimator for the conditional distribution. First, {opt nreg} quantiles 
(uniformly distributed between 0 and 1) of the unconditional distribution of the dependent variable are estimated.
Then, for each of these quantiles, the conditional distribution function at this level is estimated by a
logistic regression. This uses the fact that the conditional distribution is the expected value of a binary
event.

{phang2}
{opt m:ethod(probit)} select the probit estimator for the conditional distribution. First, {opt nreg} quantiles 
(uniformly distributed between 0 and 1) of the unconditional distribution of the dependent variable are estimated.
Then, for each of these quantiles, the conditional distribution function at this level is estimated by a
probit regression. This uses the fact that the conditional distribution is the expected value of a binary
event.

{phang2}
{opt m:ethod(lpm)} select the linear estimator for the conditional distribution. First, {opt nreg} quantiles 
(uniformly distributed between 0 and 1) of the unconditional distribution of the dependent variable are estimated.
Then, for each of these quantiles, the conditional distribution function at this level is estimated by an
OLS regression.

{phang}
{opt nr:eg(#)} set the number of regressions used to approximate the conditional distribution. 
For quantile regression, censored quantile regression, the location shift model, and the
location-scale model, {it: nreg} conditional quantiles uniformly distributed between 0 and 1 are estimated.
For the distribution estimators (logit, probit and lpm), {it: nreg} quantiles uniformly distributed between 0 and 1 
of the unconditional distribution are estimated. A distribution regression is estimated for each of this quantile.
If {it: nreg} is set equal to ., then all possible distribution regressions are estimated.
The default is 100. This default value tends to be enough for quantile models but is often too low for the distribution
regression estimators. {p_end}

{dlgtab:Further options for the location scale model}

{phang}
{opth sc:ale(varlist)} select the scale variables. In the first step, {it: depvar} is regressed on {it: indepvars}.
In the second step, the squared residuals are regressed on {it: scale}. By default, {it: scale} contains the
same variables as {it: indepvars}.

{dlgtab:Further options for the censored regression model}

{phang}
{opth c:ensoring(varname)} is a variable containing the censoring value for each observation. This allows
for different censoring values for each observations. If the censoring value is the same for all observations, a
constant variable must be generated. Note that the implemented estimator assumes that we know the censoring
value for all observations, even those not censored.

{phang}
{opt ri:ght}indicate that the dependent variable is right-censored. By default, left-censoring is
assumed.

{phang}
{opt ns:teps(#)}select the number of steps performed. The default and minimum number of steps is 3.

{phang}
{opt f:irstc(#)}select the percentage of observations thrown out during the second step. Increasing this number 
will make the estimator more robust against misspecification of the censoring probability but less efficient.
The default is 0.1.

{phang}
{opt s:econdc(#)}select the percentage of observations thrown out during the third and following steps. 
Increasing this number 
will make the estimator more robust against misspecification of the censoring probability but less efficient.
The default is 0.05.

{dlgtab:Inference}

{phang}
{opt noboot}suppress the bootstrap. The bootstrap can be very demanding in term of computation time. Therefore,
it is recommended to switch it off for the exploratory analysis of the data.

{phang}
{opt reps(#)}select the number of bootstrap replications. This number will matter only if the bootstrap has not
be suppressed. The default is 100.

{phang}{opt level(#)}; see 
{helpb estimation options##level():[R] estimation options}.

{phang}
{opt f:irst(#)} and {opt l:ast(#)} set the part of the distribution used for the inference procedures.
The tails of the distribution should not be used because standard asymptotic does not apply on these parts.
The parts that should be excluded depend on the sample size and on the distribution of the dependent variable.
{opt f:irst(#)} sets the lowest quantile used and {opt l:ast(#)} sets the highest quantile used.
The default values are 0.1 and 0.9.

{phang}
{help prefix_saving_option:{bf:saving}({it:filename}[, {it:suboptions}])}
creates a Stata data file ({opt .dta} file) containing bootstrap replicates.

{phang2}
{opt double} specifies that the results for each replication be stored as 
{opt double}s, meaning 8-byte reals.  By default, they are stored as
{opt float}s, meaning 4-byte reals. 

{phang2}
{opt every(#)} specifies that results be written to disk every {it:#}th
replication.  {opt every()} should be specified only in conjunction with 
{opt saving()} when it takes a long time for each replication. See {helpb post:[P] postfile}.

{phang2}
{opt replace} specifies that {it:filename} be overwritten, if it exists.

{phang}
{cmdab: cons:_test(}{it:#}[{it:#}[{it:# ...}]]{cmd:)}}add 
tests of the null hypothesis that QE(tau) = {it:#} for all taus between {it: first} and {it: last}.
The null hypothesis that QE(tau) = 0 for all taus between {it: first} and {it: last} is tested by default.
The other null hypothesis that the QEs are constant is also tested by default.

{dlgtab:Reporting}

{phang}
{opt noprint}suppresses all tables of results. You may want to use it if you estimate a large number of QEs.
The results can always be found in the saved matrices. This option is similar to activating {opt noprintdeco}
and {opt noprinttest}.

{opt noprintdeco}suppresses the tables containing the decomposition but not the tables containing the tests. 

{opt noprinttest}suppresses the tables containing the tests but not the tables containing the decomposition. 

{marker examples}{...}
{title:Example}

{pstd}Setup. {p_end}
{phang2}. {stata webuse nlsw88}{p_end}
{phang2}. {stata generate lwage=log(wage)}{p_end}

{pstd}Quantile regression estimator, no inference{p_end}
{phang2}. {stata cdeco lwage tenure ttl_exp grade, group(union) noboot}{p_end}

{pstd}Location shift estimator, no inference{p_end}
{phang2}. {stata cdeco lwage tenure ttl_exp grade, group(union) noboot method(loc)}{p_end}

{pstd}Location-scale shift estimator, no inference{p_end}
{phang2}. {stata cdeco lwage tenure ttl_exp grade, group(union) noboot method(locsca) scale(tenure ttl_exp grade)}{p_end}

{pstd}Logit estimator, no inference{p_end}
{phang2}. {stata cdeco lwage tenure ttl_exp grade, group(union) noboot method(logit)}{p_end}

{pstd}Logit estimator with inference{p_end}
{phang2}. {stata cdeco lwage tenure ttl_exp grade, group(union) method(logit)}{p_end}

{pstd}Plot the results. The defaut shows one panel for each component with pointwise and uniform confidence bands as well as one panel with all elements of the decomposition.{p_end}
{phang2}. {stata plotdeco}{p_end}
{pstd}We can obtain only the overall decomposition (last panel of the defaut figure) by setting {it:namelist} to {cmd:all}.{p_end}
{phang2}. {stata plotdeco all}{p_end}
{pstd}We can change the legend and the title with the options {cmd:legend} and {cmd:title}.{p_end}
{phang2}. {stata plotdeco all, legend(`"order(1 "Observed difference" 2 "Explained" 3 "Unexplained")"') title("My decomposition")}{p_end}
{pstd}We can plot a single component by setting {it:namelist} to the name of this component.{p_end}
{phang2}. {stata plotdeco characteristics}{p_end}



{title:Saved results}

{pstd}
{cmd:cdeco} saves the following in {cmd:e()}:

{synoptset 15 tabbed}{...}
{p2col 5 15 19 2: Scalars}{p_end}
{synopt:{cmd:e(N)}}number of observations{p_end}
{synopt:{cmd:e(obs0)}}number of observations in the {it:group}==0 sample.{p_end}
{synopt:{cmd:e(obs1)}}number of observations in the {it:group}==1 sample.{p_end}
{synopt:{cmd:e(nreg0)}}number of regressions effectively estimated in the {it:group}==0 sample.{p_end}
{synopt:{cmd:e(nreg1)}}number of regressions effectively estimated in the {it:group}==1 sample.{p_end}

{synoptset 15 tabbed}{...}
{p2col 5 15 19 2: Macros}{p_end}
{synopt:{cmd:e(cmd)}}{cmd:cdeco}{p_end}
{synopt:{cmd:e(properties)}}{cmd:b V}{p_end}

{synoptset 15 tabbed}{...}
{p2col 5 15 19 2: Matrices}{p_end}
{synopt:{cmd:e(quantiles)}}vector of the quantiles at which the decomposition has been estimated.{p_end}
{synopt:{cmd:e(b)}}vector of length 3 * number of quantiles. The first nq numbers contain the total difference.
The second set of nq numbers contains the effects of characteristics. The third set of nq numbers contains the effect
of coefficients.{p_end}
{synopt:{cmd:e(V)}}variance-covariance matrix of the vector {cmd:e(b)}.{p_end}
{synopt:{cmd:e(total_difference)}}matrix containing the differences the observable distributions estimated using the 
conditional models, pointwise standard errors and uniform confidence bands.{p_end}
{synopt:{cmd:e(characteristics)}}matrix containing the effects of characteristics, pointwise 
standard errors and uniform confidence bands.{p_end}
{synopt:{cmd:e(coefficients)}}matrix containing the effects of coefficients, pointwise 
standard errors and uniform confidence bands.{p_end}
{synopt:{cmd:e(misspecification_0)}}matrix containing the differences between the observed distribution and the
estimated distribution, pointwise standard errors and uniform confidence bands.{p_end}
{synopt:{cmd:e(misspecification_1)}}matrix containing the differences between the observed distribution and the
estimated distribution, pointwise standard errors and uniform confidence bands.{p_end}
{synopt:{cmd:e(observed_0)}}matrix containing the observed distribution for {it:group}==0, pointwise 
standard errors and uniform confidence bands. Note that the conditional model has not been used.{p_end}
{synopt:{cmd:e(observed_1)}}matrix containing the observed distribution for {it:group}==1, pointwise 
standard errors and uniform confidence bands. Note that the conditional model has not been used.{p_end}
{synopt:{cmd:e(fitted_0)}}matrix containing the estimated distribution for {it:group}==0, pointwise 
standard errors and uniform confidence bands. Note that the conditional model has been used.{p_end}
{synopt:{cmd:e(fitted_1)}}matrix containing the estimated distribution for {it:group}==1, pointwise 
standard errors and uniform confidence bands. Note that the conditional model has been used.{p_end}
{synopt:{cmd:e(counterfactual)}}matrix containing the estimated counterfactual distribution, pointwise 
standard errors and uniform confidence bands. Note that the conditional model from {it:group}==0
and the covariates distribution from {it:group}==1 have been used.{p_end}
{synopt:{cmd:e(coef0)}}matrix containing the coefficients of the conditional model for {it:group}==0.{p_end}
{synopt:{cmd:e(coef1)}}matrix containing the coefficients of the conditional model for {it:group}==1.{p_end}

{synoptset 15 tabbed}{...}
{p2col 5 15 19 2: Functions}{p_end}
{synopt:{cmd:e(sample)}}marks estimation sample{p_end}
{p2colreset}{...}


{title:Version requirements}

{p 4 4 2}This command requires Stata 9.2. In addition the package {cmd:moremata} 
and the command {cmd:qrprocess} must be installed. 
Type {stata "ssc install moremata"} and
{stata "net install qrprocess, from("https://raw.githubusercontent.com/bmelly/Stata/main/")"}
to install these packages.


{title:Methods and Formulas}

{p 4 6} See Chernozhukov, Fernandez-Val and Melly (2013).


{title:Reference}

{phang}
Victor Chernozhukov, Ivan Fernandez-Val and Alfred Galichon (2010): Quantile and Probability Curves without Crossing.
Econometrica, 78(3), 1093-1125.

{phang}
Victor Chernozhukov, Ivan Fernandez-Val and Blaise Melly (2013): Inference on Counterfactual Distributions.
Econometrica, 81(6), 2205-2268.

{phang}
Victor Chernozhukov and Han Hong (2002): Three-step Censored Quantile Regression and Extramarital Affairs.
Journal of the American Statistical Association, 97, 872-881.

{phang}
Roger Koenker and Gilbert Bassett (1978): Regression quantiles. Econometrica, 46, 33-50.


{title:Remarks}

{p 4 4}This is a preliminary version. Please feel free to share your comments, reports of bugs and
propositions for extensions.

{p 4 4}If you use this command in your work, please cite Chernozhukov, Ivan Fernandez-Val and Blaise Melly (2013).


{title:Disclaimer}

{p 4 4 2}This software is provided "as is" without warranty of any kind,
either expressed or implied. The entire risk as to the quality and performance of the program is with you
should the program prove defective, you assume the cost of all necessary servicing, repair or correction.

{p 4 4 2}In no event will the copyright holders or their emploers, or any other party who
may modify and/or redistribute this software be liable to you for damages, including any
general, special, incidental or consequential damages arising out of the use or inability to use the program.


{title:Authors}

{p 4 6}Victor Chernozhukov, Ivan Fernandez-Val and Blaise Melly{p_end}
{p 4 6}MIT, Boston University and Bern University{p_end}
{p 4 6}blaise.melly@unibe.ch{p_end}

